class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        '''
        time complexity: O(n^2)
        space complexity: O(n)
        經典DP題
        1.狀態: dp[i] = length of LIS ends at idx i
        2.轉移: dp[i] = min(dp[j]+1, dp[i]) if nums[j]<nums[i]
        3.BC: init dp[i] = 1; starts from i=1
        '''
        n = len(nums)
        dp = [1] * n
        maxdp = 1
        
        # i > j
        for i in range(1,n):
            for j in range(i):
                # print(f'{i}, {j}')
                if nums[j] < nums[i]:
                    dp[i] = max(dp[i], dp[j]+1) # update LIS that ends at idx i
                    maxdp = max(dp[i], maxdp)
                    # print(f'update: {dp[i]}')
        return maxdp
