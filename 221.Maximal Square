#include <algorithm>

class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        vector<vector<int>> dp(matrix.size()+1, vector<int> (matrix[0].size()+1));
        int max = INT_MIN;
        
        for(int i=0;i<matrix.size();i++){
            dp[i][0] = 0;
        }
        
        for(int i=0;i<matrix[0].size();i++){
            dp[0][i] = 0;
        }
        
        for(int i=1;i<=matrix.size();i++){ //each row
            for(int j=1;j<=matrix[0].size();j++){ //each col
                if(matrix[i-1][j-1] == '1'){
                    dp[i][j] = min(min(dp[i-1][j-1], dp[i-1][j]), min(dp[i-1][j], dp[i][j-1])) + 1;
                }
                
                max = (dp[i][j] > max ? dp[i][j] : max);
            }
        }
        
        return max * max;
    }
};
